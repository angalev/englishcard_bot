import random

from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from app.keyboards import settings, start_menu, play_buttons, main, personal_settings
from app.text_messages import start_message

import app.database.requests as rq

router = Router()

class Play(StatesGroup):
    play = State()
    favourite_words = State()

#–ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤–∞–º–∏ –∏–∑ –∞–Ω–≥–ª–æ-—Ä—É—Å—Å–∫–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è
@router.startup()
async def fill_database():
    await rq.fill_vocabulary()

# –¢–µ—Å—Ç–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∫–æ–º–∞–Ω–¥—ã help
@router.message(Command('help'))
async def get_help(message: Message):
    await message.answer('–≠—Ç–æ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç', reply_markup=settings)
#–ó–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ –º–µ–Ω—é –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ —Å—Ç–∞—Ä—Ç
@router.message(CommandStart())
async def cmd_start(message: Message):
    await rq.set_user(message.from_user.id)
    await message.answer(start_message, reply_markup=start_menu)
#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã '–ù–∞–∑–∞–¥'
@router.message(F.text=='–ù–∞–∑–∞–¥')
async def restart(message: Message):
    await message.answer(start_message, reply_markup=start_menu)

@router.message(F.text=='–ù–∞—Å—Ç—Ä–æ–π–∫–∏')
async def restart(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –∏–≥—Ä—ã:', reply_markup=personal_settings)

@router.message(F.text=='–°–ª–æ–≤–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è')
async def start_game(message: Message, state: FSMContext):
    await state.set_state(Play.play)
    await start_new_round(message=message, state=state)

@router.message(F.text=='–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞')
async def start_game(message: Message, state: FSMContext):
    await state.set_state(Play.favourite_words)
    await start_favourites(message=message, state=state)

async def start_favourites(message: Message, state: FSMContext):
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –≤–æ–ø—Ä–æ—Å
    random_words = await rq.get_favourite_words(message.from_user.id)
    correct_answer = random_words[0][3]
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(
        random_words=random_words,
        correct_answer=correct_answer
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(
        f'–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\n üá∑üá∫{random_words[1][3]}',
        reply_markup=await play_buttons(random_words)
    )

# –í—ã–Ω–æ—Å–∏–º –ª–æ–≥–∏–∫—É —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
async def start_new_round(message: Message, state: FSMContext):
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–ª–æ–≤–∞ –∏ –≤–æ–ø—Ä–æ—Å
    random_words = await rq.get_words()
    correct_answer = random_words[0][3]
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(
        random_words=random_words,
        correct_answer=correct_answer
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(
        f'–í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞:\n üá∑üá∫{random_words[1][3]}',
        reply_markup=await play_buttons(random_words)
    )

@router.callback_query(F.data=='start_game')
async def start_game(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Play.play)
    await start_new_round(message=callback.message, state=state)

async def main_menu(message: Message):
    await message.answer('–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é', reply_markup=main)

@router.message(Play.play)
async def check_correct_answer(message: Message, state: FSMContext):
    data = await state.get_data()
    if data['correct_answer'] == message.text:
        await message.answer('‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥
        await start_new_round(message, state)
    elif message.text == '–î–∞–ª—å—à–µ ‚è©':
        await start_new_round(message, state)
    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï':
        await rq.add_to_favourites(user_id=message.from_user.id,
                                   word_id=data['random_words'][2][3])
    elif message.text == '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô':
        if await rq.dell_from_favourites(user_id=message.from_user.id,
                                   word_id=data['random_words'][2][3]):
            await message.answer('üóë–°–ª–æ–≤–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –±–∞–∑—ã!')
        else:
            await message.answer('ü§∑‚Äç‚ôÇÔ∏è–°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ!')
    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await state.clear()
        await main_menu(message)
    else:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑‚ùå')

@router.message(Play.favourite_words)
async def check_correct_answer(message: Message, state: FSMContext):
    data = await state.get_data()
    if data['correct_answer'] == message.text:
        await message.answer('‚úÖ–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥
        await start_favourites(message, state)
    elif message.text == '–î–∞–ª—å—à–µ ‚è©':
        await start_favourites(message, state)
    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï':
        await rq.add_to_favourites(user_id=message.from_user.id,
                                   word_id=data['random_words'][2][3])
    elif message.text == '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô':
        if await rq.dell_from_favourites(user_id=message.from_user.id,
                                   word_id=data['random_words'][2][3]):
            await message.answer('üóë–°–ª–æ–≤–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –±–∞–∑—ã!')
        else:
            await message.answer('ü§∑‚Äç‚ôÇÔ∏è–°–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑–µ!')
    elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        await state.clear()
        await main_menu(message)
    else:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑‚ùå')